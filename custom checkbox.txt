css
.checkobox_filters_container {
    display: flex;
    height: 26px;
    align-items: flex-end;
}

.checkbox-container {
    display: block;
    position: relative;
    cursor: pointer;
    top: -11px;
    height: 100%;
}

.checkbox-container input {
    position: absolute;
    opacity: 0;
    top: 9px;
    cursor: pointer;
    width: 18px;
    height: 18px;
    z-index: 2;
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 12px;
    height: 18px;
    border: 2px solid #999;
    width: 18px;
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input:checked ~ .checkmark {
    background: rgb(68,138,255);
    background-size: 20px;
    border: 1px solid rgb(68,138,255);
    width: 20px;
    height: 20px;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkmark:after {
    left: 6px;
    top: 3px;
    width: 5px;
    height: 9px;
    border: solid white;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

.check-box {
    width: 50px;
}

.checkbox_title {
    font-style: normal;
    font-size: 16px;
    font-weight: 400;
    line-height: 24px;
    color: rgba(0, 0, 0, 0.87);
}

html

<div class="checkobox_filters_container">
	<div class="checkbox-container check-box">
		<input 	type="checkbox"
				[ngModel]="rightValue">
		<span class="checkmark"></span>
	</div>
	<div class="checkbox_title">{{rightName}}</div>
</div>